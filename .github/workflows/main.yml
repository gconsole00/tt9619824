name: Run Inline Script and Push Changes
env:
  REPO_NAME: ${{ github.event.repository.name }}
on:
  push:
  workflow_dispatch:
    inputs:
      commit_message:
permissions:
  contents: write

jobs:
  push-script:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Make changes and push
        if: ${{ !github.event.repository.is_template }}
        run: |
          export ID=$(echo "$REPO_NAME" | sed 's/-/:/g')
          rm -rf index.m3u8
          rm -rf *.html
          if [[ "$ID" == *":"* ]]; then
            curl ${{secrets.ADDON_URL}}/stream/series/$ID.json | jq '.streams[0].url' | xargs -L 1 wget -O index.m3u8
          else
            curl ${{secrets.ADDON_URL}}/stream/movie/$ID.json | jq '.streams[0].url' | xargs -L 1 wget -O index.m3u8
          fi
          # wget "${{ github.event.inputs.commit_message }}" -O index.m3u8
          grep https:// index.m3u8 | while read -r url; do
            while true;do
              wget -nv -T 15 -c "$url" && break
              echo "Wget failed, retrying"
              sleep 1
            done
            ls -lh | wc -l
          done
          # Count .txt files in the directory
          file_count=$(ls . | grep 'html' | wc -l)
          match_count=$(grep 'https://' index.m3u8 | wc -l)
          if [ "$file_count" -ne "$match_count" ]; then
            echo "Mismatch: file count"
            exit 1
          else
            echo "$file_count"
            echo "$match_count"
            echo "Counts match"
          fi
          sed -i 's/.*page-/page-/g' index.m3u8
          git config --global core.compression 1
          git config --global http.postBuffer 524288000
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add page-20* 2>/dev/null; git commit -m a; git push
          git add page-19* 2>/dev/null; git commit -m a; git push
          git add page-18* 2>/dev/null; git commit -m a; git push
          git add page-17* 2>/dev/null; git commit -m a; git push
          git add page-16* 2>/dev/null; git commit -m a; git push
          git add page-15* 2>/dev/null; git commit -m a; git push
          git add page-14* 2>/dev/null; git commit -m a; git push
          git add page-13* 2>/dev/null; git commit -m a; git push
          git add page-12* 2>/dev/null; git commit -m a; git push
          git add page-11* 2>/dev/null; git commit -m a; git push
          git add page-10* 2>/dev/null; git commit -m a; git push
          git add page-9* 2>/dev/null; git commit -m a; git push
          git add page-8* 2>/dev/null; git commit -m a; git push
          git add page-7* 2>/dev/null; git commit -m a; git push
          git add page-6* 2>/dev/null; git commit -m a; git push
          git add page-5* 2>/dev/null; git commit -m a; git push
          git add page-4* 2>/dev/null; git commit -m a; git push
          git add page-3* 2>/dev/null; git commit -m a; git push
          git add page-2* 2>/dev/null; git commit -m a; git push
          git add page-1* 2>/dev/null; git commit -m a; git push
          git add page-0* 2>/dev/null; git commit -m a; git push
          git add . 2>/dev/null; git commit -m a; git push -f
          # git filter-branch --force --index-filter 'git rm --cached --ignore-unmatch .github/workflows/main.yml' --prune-empty --tag-name-filter cat -- --all
          # git push origin --force
          curl -L \
          -X PUT \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.PAT }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/gconsole00/${{github.event.repository.name}}/actions/permissions \
          -d '{"enabled":false}'
          if [[ "$ID" == *":"* ]]; then
            curl -s ${{secrets.WORKER_URL}}/stream/series/fetchnext?id=$ID
          else
            echo "Next not available for movie"
          fi
